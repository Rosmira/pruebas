/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Pruebas1;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class OperacionesTest {
Operaciones operaciones;
	
	
	@BeforeEach
	public void setUp() {
		operaciones = new Operaciones();
	}
	
	//test de suma
	@Test
	public void obtengoOcho() {
		//Arrange
		int numeroUno = 5;
		int numeroDos = 3;
		
		//Act
						
		
		int resultado;		
		 
		resultado = operaciones.Suma(numeroUno, numeroDos);
		
		//Assert
		assertEquals(8, resultado);
	}
	@Test 
	public void obtengoSiete() {
		//Arrange 
		int numeroUno = 4;
		int numeroDos = 3;
		
		//Act	
					 
		int resultado = operaciones.Suma(numeroUno, numeroDos);
		
		//Assert
		assertEquals(7, resultado);
		
	}
	//test de agregar
	@Test 
	public void tengoCincoyAgregoUno() {
		//Arrange 
		int numeroUno = 5;
		
		//Act		
						 
		int resultado = operaciones.agregoUno(numeroUno);
		
		//Assert
		assertEquals(6, resultado);
		
	}
	
	@Test 
	public void tengocuatroymedacinco() {
		//Arrange 
		int numeroUno = 4;
		
		//Act
		
		int resultado = operaciones.agregoUno(numeroUno);
		
		//Assert
		assertEquals(5, resultado);
		
	}
	//test valor absoluto
	@Test
	public void recibocincoytengodos() {
		//Arrange 
		int numeroUno = 5;
		int numeroDos = 3;
		
		
		//Act
		int resultado = operaciones.restaValorAbsoluto(numeroUno,numeroDos);
		
		//Assert
		assertEquals(2, resultado);
	}
	@Test
	public void recibocuatroyochoytengoocho() {
		//Arrange 
				int numeroUno = 4;
				int numeroDos = 8;
								
				//Act
				int resultado = operaciones.restaValorAbsoluto(numeroUno,numeroDos);
				
				//Assert
				assertEquals(4, resultado);
	}	
	@Test
	public void multiplicando() {
		//Arrange
		int numeroUno = 2;
		int numeroDos = 5;		
		
		//Act
		int resultado = operaciones.multiplicacion(numeroUno,numeroDos);
		

		//Assert
		assertEquals(10, resultado);
	}
	@Test
	public void multiplicando2() {
		//Arrange
		int numeroUno = 7;
		int numeroDos = 3;		
		
		//Act
		int resultado = operaciones.multiplicacion(numeroUno,numeroDos);
		

		//Assert
		assertEquals(21, resultado);
	}
	@Test
	public void multiplicando3() {
		//Arrange
		int numeroUno = 2;
		int numeroDos = 2;		
		
		//Act
		int resultado = operaciones.multiplicacion(numeroUno,numeroDos);
		

		//Assert
		assertEquals(4, resultado);
	}
	@Test
	public void division() {
		//Arrange
		int numeroUno = 6;
		int numeroDos = 2;

		//Act
		int resultado = operaciones.division(numeroUno,numeroDos);

		//Assert
		assertEquals(3, resultado);
		
	}
	@Test
	public void division1() {
		//Arrange
		int numeroUno = 10;
		int numeroDos = 5;

		//Act
		int resultado = operaciones.division(numeroUno,numeroDos);

		//Assert
		assertEquals(2, resultado);
		
	}
	@Test
	public void division2() {
		//Arrange
		int numeroUno = 2;
		int numeroDos = 2;

		//Act
		int resultado = operaciones.division(numeroUno,numeroDos);

		//Assert
		assertEquals(1, resultado);
		
	}
	@Test
	public void palabras() {
		//Arrange
		String palabraUno = "hola";

		//Act
		String resultado = operaciones.palabra(palabraUno);

		//Assert
		assertEquals("hola", resultado);
	}
	
	@Test
	public void palabras1() {
		//Arrange
		String palabraUno = "Bancolombia";
		

		//Act
		String resultado = operaciones.palabra(palabraUno);		

		//Assert
		assertEquals("Bancolombia",resultado);
	}
	@Test
	public void contarPalabras() {
		//Arrange
		String palabraUno = "Hola";

		//Act
		int resultado = operaciones.contarPalabras(palabraUno);

		//Assert
		assertEquals(4,resultado);
	}
	@Test
	public void variable() {
		//Arrange
		String palabraUno = "Bancolombia";

		//Act
		int resultado = operaciones.contarPalabras(palabraUno);

		//Assert
		assertEquals(11,resultado);
	}
	@Test
	public void recibocincoObtengotrue(){
		//Arrange
		int numeroUno = 5;
		//Act
		Boolean resultado = operaciones.paroInpar(numeroUno);

		//Assert
		assertTrue(resultado);
	}
	@Test
	public void recibocuatroObtengoFalse() {
		//Arrange
		int numeroUno = 4;
		
		//Act
		boolean resultado = operaciones.paroInpar(numeroUno);

		//Assert
		assertFalse(resultado);
	}
	@Test
	public void tresObtengoFalse() {
		//Arrange
		int numeroUno = 3;
		//Act
		boolean resultado = operaciones.paroInpar(numeroUno);

		//Assert
		assertFalse(resultado);
	}
	@Test
	public void tengodosObtengoFalse() {
		//Arrange
		int numeroUno = 2;
		
		//Act
		boolean resultado = operaciones.paroInpar(numeroUno);

		//Assert
		assertFalse(resultado);
	}
	@Test
	public void numeroPositivo() {
		//Arrange
		int numeroUno = 5;
		
		//Act
		boolean resultado = operaciones.positivo(numeroUno);

		//Assert
		assertTrue(resultado);
	}
	@Test
	public void numeroNegativo() {
		//Arrange
		int numeroUno = -3;
		
		//Act
		boolean resultado = operaciones.positivo(numeroUno);

		//Assert
		assertFalse(resultado);
	}
	@Test
	public void numeroCero() {
		//Arrange
		int numeroUno = 0;
		
		//Act
		boolean resultado = operaciones.positivo(numeroUno);

		//Assert
		assertFalse(resultado);
	}
	@Test
	public void recibodosObtengoTrue() {
		//Arrange
		int numeroUno = 2;

		//Act
		boolean resultado = operaciones.esverdadero(numeroUno);

		//Assert
		assertTrue(resultado);
	}
	@Test
	public void recibotresObtengoFalse() {
		//Arrange
		int numeroUno = 3;

		//Act
		boolean resultado = operaciones.esverdadero(numeroUno);

		//Assert
		assertFalse(resultado);
	}
	@Test
	public void recibocuatroObtengoTrue() {
		//Arrange
		int numeroUno = 4;

		//Act
		boolean resultado = operaciones.esverdadero(numeroUno);

		//Assert
		assertTrue(resultado);
	}
	@Test
	public void recibodosymedevuelvedos() {
		//Arrange
		int numeroUno = 2;

		//Act
		int resultado = operaciones.transformarPositivo(numeroUno);

		//Assert
		assertEquals(2, resultado);
	}
	@Test
	public void recibocuatroObtengopositivo() {
		//Arrange
		int numeroUno = -4;

		//Act
		int resultado = operaciones.transformarPositivo(numeroUno);

		//Assert
		assertEquals(4, resultado);
	}
	@Test
	public void reciboseisObtengopositivo() {
		//Arrange
		int numeroUno = -6;

		//Act
		int resultado = operaciones.transformarPositivo(numeroUno);

		//Assert
		assertEquals(6, resultado);
	}
	@Test
	public void tengotrueytrueObtengotrue() {
		//Arrange
		boolean operadorLogicoUno = true;
		boolean operadorLogicoDos = true;

		//Act
		boolean resultado = operaciones.validacioAND(operadorLogicoUno,operadorLogicoDos);

		//Assert
		assertTrue(resultado);
	}
	@Test
	public void tengotrueyfalseObtengofalse() {
		//Arrange
		boolean operadorLogicoUno = true;
		boolean operadorLogicoDos = false;

		//Act
		boolean resultado = operaciones.validacioAND(operadorLogicoUno,operadorLogicoDos);

		//Assert
		assertFalse(resultado);
	}
	@Test
	public void tengofalseytrueObtengofalse() {
		//Arrange
		boolean operadorLogicoUno = false;
		boolean operadorLogicoDos = true;

		//Act
		boolean resultado = operaciones.validacioAND(operadorLogicoUno,operadorLogicoDos);

		//Assert
		assertFalse(resultado);
	}
	
	@Test
	public void tengotrueytrueObtengotrueInversa() {
		//Arrange
		boolean operadorLogicoUno = true;
		boolean operadorLogicoDos = true;

		//Act
		boolean resultado = operaciones.validacioOR(operadorLogicoUno,operadorLogicoDos);

		//Assert
		assertTrue(resultado);
	}
	
	@Test
	public void tengotrueyfalseObtengotrueInversa() {
		//Arrange
		boolean operadorLogicoUno = true;
		boolean operadorLogicoDos = false;

		//Act
		boolean resultado = operaciones.validacioOR(operadorLogicoUno,operadorLogicoDos);

		//Assert
		assertTrue(resultado);
	}
	
	@Test
	public void tengoFalseyfalseObtengoFalseInversa() {
		//Arrange
		boolean operadorLogicoUno = false;
		boolean operadorLogicoDos = false;

		//Act
		boolean resultado = operaciones.validacioOR(operadorLogicoUno,operadorLogicoDos);

		//Assert
		assertFalse(resultado);
	}
	@Test
	public void tengoRojoyVerdeNavidad() {
		//Arrange
		String colorUno = "rojo";
		String colorDos = "verde";

		//Act
		String resultado = operaciones.festividades(colorUno,colorDos);

		//Assert
		assertEquals("navidad", resultado);
	}
	@Test
	public void tengoNaranjayVerdeHallowen() {
		//Arrange
		String colorUno = "verde";
		String colorDos = "naranja";

		//Act
		String resultado = operaciones.festividades(colorUno, colorDos);

		//Assert
		assertEquals("Halloween", resultado);
	}
	@Test
	public void tengoRojoyNaranjaPascua() {
		//Arrange
		String colorUno = "rojo";
		String colorDos = "naranja";
		

		//Act
		String resultado = operaciones.festividades(colorUno, colorDos);

		//Assert
		assertEquals("pascua", resultado);
	}
	//Ejercicios de tarea  resueltos 
	
	@Test
	public void tengoochoydiezochoobtengoTrue() {
		//Arrange
		int numeroUno = 8;
		int numeroDos = 18;

		//Act
		boolean resultado = operaciones.validacionbooleanynumero(numeroUno,numeroDos);

		//Assert
		assertTrue(resultado);
	}
	
	@Test
	public void tengotresycientotreceObtengoTrue() {
		//Arrange
		int numeroUno = 3;
		int numeroDos = 113;

		//Act
		boolean resultado = operaciones.validacionbooleanynumero(numeroUno, numeroDos);

		//Assert
		assertTrue(resultado);
	}
	
	@Test
	public void tengoseisycientodiezysieteObtengoFalse() {
		//Arrange
		int numeroUno = 6;
		int numeroDos = 117;

		//Act
		boolean resultado = operaciones.validacionbooleanynumero(numeroUno, numeroDos);

		//Assert
		assertFalse(resultado);
	}
}
